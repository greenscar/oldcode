# MOFcart ver 2.4 : 6-30-01
# ======================================================================== #
#           MERCHANT ORDERFORMcart ver 2.4 (PKG: June 30, 2001)            #
#           All Rights Reserverd  © 2000-2001 rga@merchantpal.com          #
#           http://www.merchantorderform.com/copyright.html                #
# ======================================================================== #
#           Contact: Russell Alexander & Austin Contract Computing         #
#           Email:   rga@merchantpal.com, rga@merchantorderform.com        #
#           Phone:   512.447.1124                                          #
#           Web:     http://www.merchantpal.com                            #
#           Web:     http://www.merchantorderform.com                      #
# ======================================================================== #
# These programs are distributed as Trial Ware or Share Ware.              #
# You are Welcome to install and test all portions of the programs.        #
# The package is not limited in any way and code source is left readable.  # 
# If you continue operating it on a web site then please make arrangements #
# for the fee at:                                                          #
#        PAYMENT: http://www.merchantorderform.com/payment.html            #
#                                                                          #
# ======================================================================== #
# COPYRIGHT NOTICE:                                                        #
# http://www.merchantorderform.com/copyright.html                          #
# The contents of this file is protected under the United States           #
# copyright laws as an unpublished work, and is confidential and           #
# proprietary to Austin Contract Computing, Inc. Its use or disclosure     #
# in whole or in part without the expressed written permission of Austin   #
# Contract Computing, Inc. is prohibited. Any distribution of this file    #
# whatsoever, without the appropriate registered license, or owner consent #
# is strictly prohibited.                                                  #
# ======================================================================== #
# SECURITY NOTICE:                                                         #
# By installing these programs on your server or computer you hereby agree #
# to read and understand the document: SecurityIssues.html in the MOFcart  #
# packaged documentation. A secure installation is the sole responsibility #
# of the installer. Russell Alexander or Austin Contract Computing are not #
# responsible for insuring that your installation is secure                #
# ======================================================================== #
# THIS SOFTWARE IS PROVIDED BY THE VENDOR `AS IS' AND ANY EXPRESSED OR     #
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED           #
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE   #
# DISCLAIMED. IN NO EVENT SHALL THE VENDOR OR ITS CONTRIBUTORS BE LIABLE   #
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR             #
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF     #
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS #
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  #
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  #
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF   #
# THE POSSIBILITY OF SUCH DAMAGE.                                          #
# ======================================================================== #

sub MailCustomerReceipt {

	# WHERE IS THE LOCATION OF YOUR SENDMAIL ?
	# ======================================	
	# You MUST edit this to match where it is on your server
	# Ask your server admin where sendmail is if you don't know
	# IMPORTANT: You must include any switches and settings 
	# IMPORTANT: exactly as they should be in your mail program line
	# EXAMPLE: A typical sendmail location is:
	# EXAMPLE: /usr/sbin/sendmail -t
	# EXAMPLE: /usr/lib/sendmail -t
	# EXAMPLE: Use the "-t" switch - it is a needed security switch
	# EXAMPLE: qmail without -t switch
	# EXAMPLE: /var/qmail/bin/qmail-inject

$mail_program = '/usr/sbin/sendmail -t';

	# DO YOU WANT TO USE Net::SMTP EXTERNAL MAILER ?
	# ============================================
	# Specify an SMTP server available to MOFcart
	# You can specify your domain SMTP or any Relay SMTP
	# Note: used for NT/WinXX
	# uncomment both lines below to use Net::SMTP

# $use_external_smtp_server = 'yoursmtp.com';
# use Net::SMTP;

	# WHAT DO YOU WANT THE SUBJECT LINE TO SAY ?
	# ========================================
	# You can edit this Subject Line to fit your business
	# The Invoice number is appended ..

my ($mail_subject_line) = "Your Order with $mail_merchant_name # $InvoiceNumber";

	# DO NOT EDIT BELOW THIS LINE
	# UNLESS YOU ARE CUSTOMIZING THE PLUG-IN
	my ($str);
	my ($mail_return_addr) = $mail_return_addr;
	my ($mail_merchant_name) = $mail_merchant_name;
	my ($mail_site_url) = $mail_site_url;
	my ($mail_customer_addr) = $mail_customer_addr;
	my (@TEMP) = ();
	my (@list) = ();
	my ($tt, $tp, $tl);
	my ($key, $val);
	my ($li, $lk, $lv, $msg_status);
	my ($totalprice, $totalqnty, $temprice);
	my ($line, $qty, $item, $desc, $price, $ship, $taxit);
	my ($DiscountOne);
	my ($DiscountTwo);
	my ($CombinedDiscount);
	my ($SubDiscount);
	my ($TaxRate);
	my ($AdjustedTax);
	my ($InitialAmount);
	my ($Tax);
	my ($HandlingCharge);
	my ($InsuranceCharge);
	my ($ShippingCharge);
	my ($FinalProducts) = CommifyNumbers ($frm{'Primary_Products'});
	my ($FinalAmount) = CommifyMoney ($frm{'Final_Amount'});
	my ($CombinedSHI) = CommifyMoney ($frm{'Combined_SHI'});
	my ($msg_tab, $cc_date);
	my ($msg_tab_ck);
	my ($check_additional);
	my ($tax_discounted);
	my ($taxable_count, $notax_count);
	my ($paypal_temp) = $paypal_login;
	my ($mail_msg, $save_msg, $save_url, $ship_msg, $bill_msg, $receipt_msg);
	$msg_status = "$FinalProducts Items " if ($frm{'Primary_Products'} > 1);
	$msg_status = "$FinalProducts Item " if ($frm{'Primary_Products'} == 1);
	$msg_status = $msg_status . " $currency $Display_Payment_Amount";

	# greeting
	push (@TEMP, "$MyDate \n\n") if ($MyDate);
	push (@TEMP, "Thank you for ordering from $mail_merchant_name. \n");
	push (@TEMP, "Your purchase information appears below. \n\n");

	if ($frm{'input_payment_options'} eq "MAIL") {
	push (@TEMP, "Please Mail ");
	push (@TEMP, "or Fax ") if ($merchant_fax);
	push (@TEMP, "your payment to: \n\n");
	push (@TEMP, "     $mail_merchant_name \n");
	push (@TEMP, "     $merchant_addr \n");
	push (@TEMP, "     $merchant_csz \n");
	push (@TEMP, "     Phone: $merchant_phone \n");
	push (@TEMP, "     Fax: $merchant_fax \n\n") if ($merchant_fax);
	push (@TEMP, "\n") unless ($merchant_fax);
	}

	if ($frm{'input_payment_options'} eq "ONACCT") {
	push (@TEMP, "Payment will be credited to account ");
	push (@TEMP, "$currency $Display_Payment_Amount. \n");
	push (@TEMP, "Account Name: $frm{'Ecom_Payment_Card_Name'}\n") if ($frm{'Ecom_Payment_Card_Name'});
	push (@TEMP, "Account Number: $frm{'Ecom_Payment_Card_Number'}\n") if ($frm{'Ecom_Payment_Card_Number'});
	push (@TEMP, "\n");
	}

	if ($frm{'input_payment_options'} eq "CALLME") {
	push (@TEMP, "We will call you for your payment information and details. \n");
	push (@TEMP, "Amount ");
	push (@TEMP, "$currency $Display_Payment_Amount. ");
	push (@TEMP, "Please print this invoice. \n\n");
	}

	# Change the PayPal message here if you need to
	if ($frm{'input_payment_options'} eq "PAYPAL") {
	push (@TEMP, "This is an email confirmation of your order. \n");
	push (@TEMP, "PayPal will notify us when your payment is credited. \n\n");
	push (@TEMP, "If you did not complete the PayPal payment process from \n");
	push (@TEMP, "your Final Invoice at our site, you can submit payment here: \n\n");
	push (@TEMP, "     url: http://www.paypal.com/ \n");
	push (@TEMP, "     pay: $paypal_temp \n");
	push (@TEMP, "     amt: $currency $Display_Payment_Amount \n\n");
	}

	# zero based invoice
	if ($frm{'input_payment_options'} eq "ZEROPAY") {
	push (@TEMP, "No charges are associated with this invoice. \n");
	push (@TEMP, "     amt: $currency $Display_Payment_Amount \n\n");
	}

	# custom forms gateway payment
	if ($frm{'input_payment_options'} eq "GATEWAY") {
	push (@TEMP, "This is an email confirmation of your order. \n");
	push (@TEMP, "If you did not complete the payment process via $gateway_item_name ");
	push (@TEMP, "then please contact us. \n\n");
	push (@TEMP, "Amount: $currency $Display_Payment_Amount \n\n");
	}

	# additional information here if needed ----->
	# additional information here if needed ----->

	if ($save_invoice_html) {
	push (@TEMP, "Your invoice copy: \n");
	push (@TEMP, $save_invoice_url . $$ . $InvoiceNumber . ".html \n");
	push (@TEMP, "Login: $mail_user\n") if ($mail_user);
	push (@TEMP, "Pswd: $mail_pswd\n") if ($mail_pswd);
	}

	push (@TEMP, "\n");
	push (@TEMP, "       -- $mail_merchant_name Customer Service \n\n");
	push (@TEMP, "============================================================ \n\n");

	# order summary
	push (@TEMP, "ORDER SUMMARY \n\n");
	push (@TEMP, "Invoice Number: $InvoiceNumber \n");
	push (@TEMP, "Number of Items: $FinalProducts \n");
	push (@TEMP, "Total Order Amount: $currency $FinalAmount \n");
	push (@TEMP, "Deposit Amount: $currency $Display_Payment_Amount \n") if ($frm{'Deposit_Amount'} > 0);
	$_ = $frm{'input_payment_options'};	
	push (@TEMP, "Payment Type: $payment_options_list{$_} \n");
		if ($check_check) {
		push (@TEMP, "$frm{'Check_Bank_Name'} \n") if ($frm{'Check_Bank_Name'}) ;
		}

	push (@TEMP, "Order ID: $frm{'OrderID'} \n\n") if ($show_order_id);
	push (@TEMP, "\n");
	push (@TEMP, "------------------------------------------------------------ \n\n");

	# ship to
	if ($frm{'Allow_Shipping'}) {
	$msg_tab = "SHIPPING TO ";	
	} elsif ($frm{'Allow_Tax'}) {
	$msg_tab = "TAX AREA ";
	} else {
	$msg_tab = "Shipping Information: NONE ";
	}

	push (@TEMP, "$msg_tab \n\n");
	if ($frm{'Allow_Shipping'} || $frm{'Allow_Tax'}) {
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ShipTo_Postal_Name_Prefix'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Name_Prefix'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_Name_First'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Name_First'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_Name_Middle'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Name_Middle'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_Name_Last'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Name_Last'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_Name_Suffix'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Name_Suffix'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ShipTo_Postal_Company'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Company'} \n")}
	if ($frm{'Ecom_ShipTo_Postal_Street_Line1'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Street_Line1'} \n")}
	if ($frm{'Ecom_ShipTo_Postal_Street_Line2'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Street_Line2'} \n")}
	if ($frm{'Ecom_ShipTo_Postal_City'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_City'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_StateProv'}) {
	unless ($frm{'Ecom_ShipTo_Postal_StateProv'} eq "NOTINLIST") {
	my ($sc) = $frm{'Ecom_ShipTo_Postal_StateProv'};
	$sc =~ s/-/ /g;
	push (@TEMP, "$sc ");
	$msg_tab_ck++;}}
	if ($frm{'Ecom_ShipTo_Postal_Region'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_Region'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ShipTo_Postal_PostalCode'}) {
	push (@TEMP, "$frm{'Ecom_ShipTo_Postal_PostalCode'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ShipTo_Postal_CountryCode'}) {
	my ($tc) = $frm{'Ecom_ShipTo_Postal_CountryCode'};
	$tc =~ s/-/ /g;
	push (@TEMP, "$tc \n");
	}
	push (@TEMP, " \n");
	if ($frm{'Ecom_ShipTo_Telecom_Phone_Number'}) {
	push (@TEMP, "Ship To Phone: $frm{'Ecom_ShipTo_Telecom_Phone_Number'} \n")}
	if ($frm{'Ecom_ShipTo_Online_Email'}) {
	push (@TEMP, "Ship To Email: $frm{'Ecom_ShipTo_Online_Email'} \n")}
	push (@TEMP, " \n");
	push (@TEMP, "$frm{'Shipping_Message'} \n\n") if ($frm{'Shipping_Message'});
	push (@TEMP, "------------------------------------------------------------ \n\n");
	}

	# bill to info
	$tt = 0;
	while (($key, $val) = each (%frm)) {if ($key =~ /^Ecom_BillTo_/) {$tt++ if ($val)}}
	if ($tt) {
	push (@TEMP, "BILLING TO \n\n");
	$msg_tab_ck = 0;
	if ($frm{'Ecom_BillTo_Postal_Name_Prefix'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Name_Prefix'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_Name_First'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Name_First'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_Name_Middle'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Name_Middle'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_Name_Last'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Name_Last'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_Name_Suffix'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Name_Suffix'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_BillTo_Postal_Company'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Company'} \n")}
	if ($frm{'Ecom_BillTo_Postal_Street_Line1'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Street_Line1'} \n")}
	if ($frm{'Ecom_BillTo_Postal_Street_Line2'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Street_Line2'} \n")}
	if ($frm{'Ecom_BillTo_Postal_City'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_City'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_StateProv'}) {
 	unless ($frm{'Ecom_BillTo_Postal_StateProv'} eq "NOTINLIST") {
	my ($sc) = $frm{'Ecom_BillTo_Postal_StateProv'};
	$sc =~ s/-/ /g;
	push (@TEMP, "$sc ");
	$msg_tab_ck++;}}
	if ($frm{'Ecom_BillTo_Postal_Region'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_Region'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_BillTo_Postal_PostalCode'}) {
	push (@TEMP, "$frm{'Ecom_BillTo_Postal_PostalCode'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_BillTo_Postal_CountryCode'}) {
	my ($tc) = $frm{'Ecom_BillTo_Postal_CountryCode'};
	$tc =~ s/-/ /g;
	push (@TEMP, "$tc \n");
	}
	if ($frm{'Ecom_BillTo_Telecom_Phone_Number'}) {
	push (@TEMP, "Phone: $frm{'Ecom_BillTo_Telecom_Phone_Number'} \n")}
	if ($frm{'Ecom_BillTo_Online_Email'}) {
	push (@TEMP, "Email: $frm{'Ecom_BillTo_Online_Email'} \n")}
	push (@TEMP, " \n");
	push (@TEMP, "------------------------------------------------------------ \n\n");
	}

	# receipt to info
	$tt = 0;
	while (($key, $val) = each (%frm)) {if ($key =~ /^Ecom_ReceiptTo_/) {$tt++ if ($val)}}
	if ($tt) {
	push (@TEMP, "RECEIPT TO \n\n");
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ReceiptTo_Postal_Name_Prefix'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Name_Prefix'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_Name_First'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Name_First'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_Name_Middle'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Name_Middle'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_Name_Last'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Name_Last'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_Name_Suffix'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Name_Suffix'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ReceiptTo_Postal_Company'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Company'} \n")}
	if ($frm{'Ecom_ReceiptTo_Postal_Street_Line1'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Street_Line1'} \n")}
	if ($frm{'Ecom_ReceiptTo_Postal_Street_Line2'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Street_Line2'} \n")}
	if ($frm{'Ecom_ReceiptTo_Postal_City'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_City'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_StateProv'}) {
	unless ($frm{'Ecom_ReceiptTo_Postal_StateProv'} eq "NOTINLIST") {
	my ($sc) = $frm{'Ecom_ReceiptTo_Postal_StateProv'};
	$sc =~ s/-/ /g;
	push (@TEMP, "$sc ");
	$msg_tab_ck++;}}
	if ($frm{'Ecom_ReceiptTo_Postal_Region'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_Region'} ");
	$msg_tab_ck++;}
	if ($frm{'Ecom_ReceiptTo_Postal_PostalCode'}) {
	push (@TEMP, "$frm{'Ecom_ReceiptTo_Postal_PostalCode'} ");
	$msg_tab_ck++;}
	push (@TEMP, " \n") if ($msg_tab_ck);
	$msg_tab_ck = 0;
	if ($frm{'Ecom_ReceiptTo_Postal_CountryCode'}) {
	my ($tc) = $frm{'Ecom_ReceiptTo_Postal_CountryCode'};
	$tc =~ s/-/ /g;
	push (@TEMP, "$tc \n");
	}
	if ($frm{'Ecom_ReceiptTo_Telecom_Phone_Number'}) {
	push (@TEMP, "Phone: $frm{'Ecom_ReceiptTo_Telecom_Phone_Number'} \n")}
	if ($frm{'Ecom_ReceiptTo_Online_Email'}) {
	push (@TEMP, "Email: $frm{'Ecom_ReceiptTo_Online_Email'} \n")}
	push (@TEMP, " \n");
	push (@TEMP, "------------------------------------------------------------ \n\n");
	}

	# orders
	$taxable_count = 0;
	$notax_count = 0;
	push (@TEMP, "ORDER DETAIL \n\n");

	foreach $line (@orders) {
  	($qty, $item, $desc, $price, $ship, $taxit) = split (/$delimit/, $line);
	$taxable_count += $qty if ($taxit);
	$notax_count += $qty unless ($taxit);
	++$tp;
	push (@TEMP, "[Item # $tp] \n");

 	$item =~ s/\[/</g;
	$item =~ s/\]/>/g;
   	$item =~ s/<([^>]|\n)*>//g;
	if ($qty > 1 || $allow_fractions) {
		$sub_price = ($qty * $price);
		$totalprice += $sub_price;
		$totalqnty += $qty;
	      	$sub_price = sprintf "%.2f", $sub_price;
      		$sub_price = CommifyMoney ($sub_price);
		$price = CommifyMoney ($price);
		$qty = CommifyNumbers ($qty);
		push (@TEMP, "$qty units $item ");
		push (@TEMP, "($currency $price each) ");
		push (@TEMP, "subtotal = $currency $sub_price ");
		} else {
		$totalprice += $price;
		$totalqnty += $qty;
		$price = CommifyMoney ($price);
		push (@TEMP, "$qty unit $item ");
		push (@TEMP, "subtotal = $currency $price ");
		}
	if ($identify_tax_items) { 
		if ($frm{'Tax_Amount'} > 0 && $taxit) {
		push (@TEMP, " (Tax) \n");
		} else {
		push (@TEMP, " (No Tax) \n");
		}
	} else {
	push (@TEMP, " \n");
	}

	# Format User Input in Description
	@list = split (/\|/, $desc);
	$desc = shift (@list);
	foreach $li (@list) {
	($lk, $lv) = split (/::/, $li);
		if ($makelist) {
		$desc = $desc . "\n* $lk $lv";
		} else {
		$desc = $desc . "$lk$lv";
		}}
	$desc =~ s/\[br\]/\n/g;
	$desc =~ s/\[p\]/\n\n/g;
	$desc =~ s/\[li\]/\n*/g;
 	$desc =~ s/\[/</g;
	$desc =~ s/\]/>/g;
   	$desc =~ s/<([^>]|\n)*>//g;
	push (@TEMP, "$desc \n\n");
	}
	push (@TEMP, "------------------------------------------------------------ \n\n");

	# totals
	if ($totalqnty > 1) {$pd = "Items"} else {$pd = "Item"}
	$totalprice = sprintf "%.2f", $totalprice;
	$totalprice = CommifyMoney ($totalprice);
	$totalqnty = CommifyNumbers ($totalqnty);
	push (@TEMP, "PURCHASE SUMMARY \n\n");
	push (@TEMP, &MakeLeft(46,"Subtotal $totalqnty $pd "));
	push (@TEMP, &MakeRight(12,"$totalprice"));
	push (@TEMP, "\n");

	# Display First Discount
	if ($frm{'Primary_Discount'} > 0 || $frm{'Primary_Discount_Line_Override_Backend'}) {
	$DiscountOne = CommifyMoney ($frm{'Primary_Discount'});
	push (@TEMP, &MakeLeft(46,"$frm{'Primary_Discount_Status'} "));
	push (@TEMP, &MakeRight(12,"- $DiscountOne"));
	push (@TEMP, "\n");
	}

	# Display Coupon Discount
	if ($frm{'Coupon_Discount'} > 0) {
	$DiscountTwo = CommifyMoney ($frm{'Coupon_Discount'});
	push (@TEMP, &MakeLeft(46,"Discount $frm{'Coupon_Discount_Status'} "));
	push (@TEMP, &MakeRight(12,"- $DiscountTwo"));
	push (@TEMP, "\n");
	}

	# Display Subtotal if discounts
	if ($frm{'Combined_Discount'} > 0 ) {
	$SubDiscount = CommifyMoney ($frm{'Sub_Final_Discount'});
	$CombinedDiscount = CommifyMoney ($frm{'Combined_Discount'});
	push (@TEMP, &MakeLeft(46,"Sub Total After $currency $CombinedDiscount Total Discount "));
	push (@TEMP, &MakeRight(12,"$SubDiscount"));
	push (@TEMP, "\n");
	}

	# Tax Before
	if ($frm{'Tax_Rule'} eq "BEFORE") {
	if ($frm{'Tax_Amount'} > 0 || $frm{'Tax_Exempt_Status'}) {
	$TaxRate = ($frm{'Tax_Rate'} * 100);
	$AdjustedTax = CommifyMoney ($frm{'Adjusted_Tax_Amount_Before'});
	$Tax = CommifyMoney ($frm{'Tax_Amount'});
	if ($frm{'Tax_Exempt_Status'}) {
	push (@TEMP, &MakeLeft(46,"Tax exempt ($frm{'Tax_Exempt_Status'}) \(on $currency $AdjustedTax taxable\) "));}
	else {
	push (@TEMP, &MakeLeft(46,"Sales tax $TaxRate\% \(on $currency $AdjustedTax taxable\) "));}
	push (@TEMP, &MakeRight(12,"$Tax"));
	push (@TEMP, "\n");
	}}

	# Handling Charges
	if ($frm{'Handling'} > 0 || $frm{'Handling_Line_Override'}) {
	$HandlingCharges = CommifyMoney ($frm{'Handling'});
	push (@TEMP, &MakeLeft(46,"$frm{'Handling_Status'} "));
	if ($frm{'Handling'} == 0 && $frm{'Handling_Amt_Override'}) {
	my($ao) = $frm{'Handling_Amt_Override'};
   	$ao =~ s/<([^>]|\n)*>//g;
	push (@TEMP, &MakeRight(12,"$ao"));
	} else {
	push (@TEMP, &MakeRight(12,"$HandlingCharges"));
	}
	push (@TEMP, "\n");
	}

	# Insurance Charges
	if ($frm{'Insurance'} > 0 || $frm{'Insurance_Line_Override'}) {
	$InsuranceCharges = CommifyMoney ($frm{'Insurance'});
	push (@TEMP, &MakeLeft(46,"$frm{'Insurance_Status'} "));
	if ($frm{'Insurance'} == 0 && $frm{'Insurance_Amt_Override'}) {
	my($ao) = $frm{'Insurance_Amt_Override'};
   	$ao =~ s/<([^>]|\n)*>//g;
	push (@TEMP, &MakeRight(12,"$ao"));
	} else {
	push (@TEMP, &MakeRight(12,"$InsuranceCharges"));
	}
	push (@TEMP, "\n");
	}

	# Shipping Charges
	if ($frm{'Shipping_Amount'} > 0 || $frm{'Shipping_Line_Override'}) {
	$ShippingCharges = CommifyMoney ($frm{'Shipping_Amount'});
	push (@TEMP, &MakeLeft(46,"$frm{'Shipping_Message'} "));
	if ($frm{'Shipping_Amount'} == 0 && $frm{'Shipping_Amt_Override'}) {
	my($ao) = $frm{'Shipping_Amt_Override'};
   	$ao =~ s/<([^>]|\n)*>//g;
	push (@TEMP, &MakeRight(12,"$ao"));
	} else {
	push (@TEMP, &MakeRight(12,"$ShippingCharges"));
	}
	push (@TEMP, "\n");
	}

	# Tax After
	if ($frm{'Tax_Rule'} eq "AFTER") {
	if ($frm{'Tax_Amount'} > 0 || $frm{'Tax_Exempt_Status'}) {
	$TaxRate = ($frm{'Tax_Rate'} * 100);
	$AdjustedTax = CommifyMoney ($frm{'Adjusted_Tax_Amount_After'});
	$Tax = CommifyMoney ($frm{'Tax_Amount'});
	if ($frm{'Tax_Exempt_Status'}) {
	push (@TEMP, &MakeLeft(46,"Tax exempt ($frm{'Tax_Exempt_Status'}) \(on $currency $AdjustedTax taxable\) "));}
	else {
	push (@TEMP, &MakeLeft(46,"Sales tax $TaxRate\% \(on $currency $AdjustedTax taxable\) "));}
	push (@TEMP, &MakeRight(12,"$Tax"));
	push (@TEMP, "\n");
	}}

	# cod flat rate
	if ($frm{'input_payment_options'} eq "COD") {
	if ($cod_charges > 0 ) {
	push (@TEMP, &MakeLeft(46,"COD Delivery Surcharge "));
	push (@TEMP, &MakeRight(12,"$cod_charges"));
	push (@TEMP, "\n");
	}}

	# Final Total
	push (@TEMP, "------------------------------------------------------------ \n");
	push (@TEMP, &MakeLeft(46,"Total Order Amount "));
	push (@TEMP, &MakeRight(12,"$FinalAmount"));
	push (@TEMP, "\n");

	# Any Deposit Amount
	if ($frm{'Deposit_Amount'} > 0) {
	push (@TEMP, &MakeLeft(46,"Amount of Deposit "));
	push (@TEMP, &MakeRight(12,"$Display_Payment_Amount"));
	push (@TEMP, "\n");
	}

	# Balance after deposits
	if ($frm{'Deposit_Amount'} > 0) {
		if ($frm{'Overpaid_Surplus'}) {
		push (@TEMP, &MakeLeft(46,"Overpaid Surplus "))} 
		else {
		push (@TEMP, &MakeLeft(46,"Remaining Balance "))}
	push (@TEMP, &MakeRight(12,"$frm{'Remaining_Balance'}"));
	push (@TEMP, "\n");
	}

	push (@TEMP, "\n");
	push (@TEMP, "------------------------------------------------------------ \n\n");

	# additional computation info
	$tax_discounted = ( ($frm{'Initial_Taxable_Amount'}) - ($frm{'Adjusted_Tax_Amount'}) );
	$tax_discounted = sprintf "%.2f", $tax_discounted;
	$tax_discounted = CommifyMoney ($tax_discounted);
	$TaxRate = ($frm{'Tax_Rate'} * 100);
	$taxable_count = CommifyNumbers ($taxable_count);
	$notax_count = CommifyNumbers ($notax_count);
	$CombinedDiscount = CommifyMoney ($frm{'Combined_Discount'});
	$InitialAmount = CommifyMoney ($frm{'Initial_Taxable_Amount'});

	if ($frm{'Tax_Amount'} > 0 && $notax_count > 0 && ($frm{'Combined_Discount'} > 0 && $taxable_count)) {
	push (@TEMP, "ADJUSTMENTS \n\n");
	push (@TEMP, "A $TaxRate\% Sales tax was applied to $taxable_count items \n");
	push (@TEMP, "The Pre Discounted value for all Taxable items = $currency $InitialAmount. \n");
	push (@TEMP, "We have subtracted a weighted porportion of the discounts. \n");
	push (@TEMP, "The Taxable items have been discounted $currency $tax_discounted \n");
		if ($frm{'Tax_Rule'} eq "AFTER" && $frm{'Combined_SHI'} > 0) {
		push (@TEMP, "We added any Shipping, Handling, Insurance = $currency $CombinedSHI. \n");
		}

	push (@TEMP, "Making The Final Adjusted Taxable Amount = $currency $AdjustedTax. \n");
		if ($notax_count == 1) {
		push (@TEMP, "There was $notax_count Non Taxable item \n");
		} else {
		push (@TEMP, "There were $notax_count Non Taxable items \n");
		}

	push (@TEMP, "\n");
	push (@TEMP, "------------------------------------------------------------ \n\n");
	}

	if ($frm{'special_instructions'}) {
	push (@TEMP, "SPECIAL INSTRUCTIONS \n\n");
	push (@TEMP, "$frm{'special_instructions'} \n\n");
	push (@TEMP, "------------------------------------------------------------ \n\n");
	}

	push (@TEMP, "Thanks again for shopping at $mail_merchant_name ! \n\n");
	push (@TEMP, "$mail_merchant_name \n");
	push (@TEMP, "$mail_site_url \n\n");

	# SEND MAIL --> CUSTOMER
	if ($use_external_smtp_server) {
        $smtp = Net::SMTP->new($use_external_smtp_server);
        $smtp->mail($mail_return_addr); 
        $smtp->to($mail_customer_addr);
        $smtp->data();
        $smtp->datasend("To: $mail_customer_addr\n");
        $smtp->datasend("From: $mail_return_addr\n");
        $smtp->datasend("Subject: $mail_subject_line\n");
        $smtp->datasend("\n");
        $smtp->datasend(@TEMP);
        $smtp->dataend();
        $smtp->quit;

	} else {
	open (CUSTOMER_MAIL, "|$mail_program");
   	print CUSTOMER_MAIL "To: $mail_customer_addr\n";
	print CUSTOMER_MAIL "From: $mail_return_addr\n";
   	print CUSTOMER_MAIL "Subject: $mail_subject_line\n\n";
	print CUSTOMER_MAIL @TEMP;
   	close (CUSTOMER_MAIL);
	}
	}

	sub MakeLeft {
		my($len,$txt) = @_;	
		$str = length($txt);
		$len = ($len - $str);
		$len = "." x $len;
		$str = $txt . $len;
	return $str;
	}

	sub MakeRight {
		my($len,$txt) = @_;	
		$str = length($txt);
		$len = ($len - $str);
		$len = " " x $len;
		$str = " $currency" . $len . $txt;
	return $str;
	}

1;
# END MERCHANT ORDERFORM Cart ver 2.4
# Copyright by RGA 2000- 2001
